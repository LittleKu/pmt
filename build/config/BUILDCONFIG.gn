if (target_os == "") {
  # default to host operating system
  target_os = host_os
}

if (target_cpu == "") {
  # default to host processor architecture
  target_cpu = host_cpu
}

if (current_os == "") {
  current_os = target_os
}

if (current_cpu == "") {
  current_cpu = target_cpu
}

declare_args() {
  # default generate the debug option for the target
  is_debug = true
}

is_linux = current_os == "linux"
is_mac = current_os == "mac"
is_win = current_os == "win" || current_os == "winuwp"

default_compiler_configs = [
  "//build/config/compiler:compiler",
  "//build/config/compiler:default_include_dirs",
  "//build/config/compiler:default_optimization",
  "//build/config/compiler:default_symbols",
  "//build/config/compiler:no_chromium_code",
  "//build/config/compiler:exceptions",
  "//build/config/compiler:no_rtti",
]

if (is_win) {
  default_compiler_configs += [
    "//build/config/win:default_crt",
    "//build/config/win:lean_and_mean",
    "//build/config/win:nominmax",
    "//build/config/win:unicode",
    "//build/config/win:winver",
  ]
}

if (is_debug) {
  default_compiler_configs += [ "//build/config:debug" ]
} else {
  default_compiler_configs += [ "//build/config:release" ]
}

set_defaults("static_library") {
  configs = default_compiler_configs
}

set_defaults("source_set") {
  configs = default_compiler_configs
}

if (is_win) {
  _linker_configs = [
    "//build/config/win:default_incremental_linking",
    "//build/config/win:console",
  ]
} else {
  _linker_configs = []
}

default_executable_configs = default_compiler_configs + [
                               "//build/config:default_libs",
                               "//build/config:executable_config",
                             ] + _linker_configs

set_defaults("executable") {
  configs = default_executable_configs
}

default_shared_library_configs = default_compiler_configs + [
                                   "//build/config:default_libs",
                                   "//build/config:shared_library_config",
                                 ] + _linker_configs

set_defaults("shared_library") {
  configs = default_shared_library_configs
}

set_defaults("loadable_module") {
  configs = default_shared_library_configs
}

# set_default_toolchain("//build/toolchain:gcc")
set_default_toolchain("//build/toolchain:msvc")
