toolchain("msvc") {
  lib_switch = ""
  lib_dir_switch = "/LIBPATH:"
  tool("cc") {
    precompiled_header_type = "msvc"
    pdbname = "{{target_out_dir}}/{{label_name}}_c.pdb"
    depsformat = "msvc"
    description = "CC {{output}}"
    outputs = [ "{{target_out_dir}}/{{label_name}}/{{source_name_part}}.obj" ]
    command = "cl /c {{source}} /nologo /showIncludes {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} /Fo{{output}} /Fd\"$pdbname\""
  }
  tool("cxx") {
    precompiled_header_type = "msvc"
    pdbname = "{{target_out_dir}}/{{label_name}}_cc.pdb"
    depsformat = "msvc"
    description = "CXX {{output}}"
    outputs = [ "{{target_out_dir}}/{{label_name}}/{{source_name_part}}.obj" ]
    command = "cl /c {{source}} /Fo{{output}} /nologo /showIncludes {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} /Fd\"$pdbname\""
  }
  tool("alink") {
    rspfile = "{{output}}.rsp"
    command = "lib \"/OUT:{{output}}\" /nologo {{arflags}} \"@$rspfile\""
    description = "LIB {{output}}"
    outputs = [ "{{output_dir}}/{{target_output_name}}.lib" ]
    default_output_extension = ".lib"
    default_output_dir = "{{target_out_dir}}"
    rspfile_content = "{{inputs_newline}}"
  }
  tool("solink") {
    dllname = "{{output_dir}}/{{target_output_name}}{{output_extension}}"
    libname = "${dllname}.lib"
    pdbname = "${dllname}.pdb"
    rspfile = "${dllname}.rsp"
    command = "link \"/OUT:$dllname\" /nologo \"/IMPLIB:$libname\" /DLL \"/PDB:$pdbname\" \"@$rspfile\""

    default_output_extension = ".dll"
    default_output_dir = "{{root_out_dir}}"
    description = "LINK(DLL) {{output}}"
    outputs = [
      dllname,
      libname,
      pdbname,
    ]
    link_output = libname
    depend_output = libname
    runtime_outputs = [
      dllname,
      pdbname,
    ]
    restat = true
    rspfile_content =
        "{{libs}} {{solibs}} {{inputs_newline}} {{ldflags}} {{rlibs}}"
  }
  tool("link") {
    exename = "{{output_dir}}/{{target_output_name}}{{output_extension}}"
    pdbname = "$exename.pdb"
    rspfile = "$exename.rsp"
    command = "link  \"/OUT:$exename\" /nologo \"/PDB:$pdbname\" \"@$rspfile\""
    default_output_extension = ".exe"
    default_output_dir = "{{root_out_dir}}"
    description = "LINK {{output}}"
    outputs = [
      exename,
      pdbname,
    ]
    runtime_outputs = outputs
    rspfile_content =
        "{{inputs_newline}} {{libs}} {{solibs}} {{ldflags}} {{rlibs}}"
  }
  tool("stamp") {
    command = "cmd /c type nul > \"{{output}}\""
    description = "STAMP {{output}}"
  }
  tool("copy") {
    command = "copy /y {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}

toolchain("gcc") {
  tool("cc") {
    depfile = "{{output}}.d"
    command = "gcc -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CC {{output}}"
    outputs =
        [ "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o" ]
  }

  tool("cxx") {
    depfile = "{{output}}.d"
    command = "g++ -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{output}}"
    outputs =
        [ "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o" ]
  }

  tool("alink") {
    command = "rm -f {{output}} && ar rcs {{output}} {{inputs}}"
    description = "AR {{target_output_name}}{{output_extension}}"

    outputs =
        [ "{{target_out_dir}}/{{target_output_name}}{{output_extension}}" ]
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("solink") {
    soname = "{{target_output_name}}{{output_extension}}"  # e.g. "libfoo.so".
    sofile = "{{output_dir}}/$soname"
    rspfile = soname + ".rsp"
    if (is_mac) {
      os_specific_option = "-install_name @executable_path/$sofile"
      rspfile_content = "{{inputs}} {{solibs}} {{libs}}"
    } else {
      os_specific_option = "-Wl,-soname=$soname"
      rspfile_content = "-Wl,--whole-archive {{inputs}} {{solibs}} -Wl,--no-whole-archive {{libs}}"
    }

    command = "g++ -shared {{ldflags}} -o $sofile $os_specific_option @$rspfile"

    description = "SOLINK $soname"

    # Use this for {{output_extension}} expansions unless a target manually
    # overrides it (in which case {{output_extension}} will be what the target
    # specifies).
    default_output_extension = ".so"

    # Use this for {{output_dir}} expansions unless a target manually overrides
    # it (in which case {{output_dir}} will be what the target specifies).
    default_output_dir = "{{root_out_dir}}"

    outputs = [ sofile ]
    link_output = sofile
    depend_output = sofile
    output_prefix = "lib"
  }

  tool("link") {
    outfile = "{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    if (is_mac) {
      command = "g++ {{ldflags}} -o $outfile @$rspfile {{solibs}} {{libs}}"
    } else {
      command = "g++ {{ldflags}} -o $outfile -Wl,--start-group @$rspfile {{solibs}} -Wl,--end-group {{libs}}"
    }
    description = "LINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    rspfile_content = "{{inputs}}"
    outputs = [ outfile ]
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }

  tool("copy") {
    command = "cp -af {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}
